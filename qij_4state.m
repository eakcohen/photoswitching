function [Q, endstate] = qij_4state(n,lambda,mu,Delta)
%This function computes the inverse laplace transforms in the case m=1; exact solutions are provided for all n=0,1. The matlab ilaplace is bugged for n>1, hence there are no exact forms provided unless hidden process ends at state 1, in which case the end state vector is the only thing that can be calculated (when n=2).  
%Feel free to try and update this.
%lambda = (lambda_001 lambda_01 lambda_0102 lambda_011 lambda_0203 lambda_021 ... lambda_0m1 lambda_10
%mu = [mu_0 mu_01 mu_02 ... mu_0m mu_1]
l001 = lambda(1);
l01 = lambda(2); 
l011 = lambda(3); 
l10 = lambda(4); 
mu0 = mu(1); 
m01 = mu(2); 
mu1 = mu(3); 
s0 = lambda(1)+lambda(2)+mu(1); 
s01 = lambda(3) + mu(2); 
s1 = lambda(4) + mu(3); 
s = [s0 s01 s1]; 
dist = sqrt(bsxfun(@minus,s,s').^2 + bsxfun(@minus,s,s').^2); %matrix of distances between sigmas 
dist = [dist(1,2:end) dist(2,end)]; %vector of distances in order s0s01 s0s02 s0s1 s01s02 s01s1 s02s1
sigmas_equal = dist < 1e-4; 
no_sigmas_equal = sum(sigmas_equal); %no of sigmas that are "equal" to one another in the order [s0-s01 s0-s1 s01-s1] -- this is needed to reduce numerical overflow. 

Q = zeros(3,4);
endstate = zeros(3,2);  %When hidden process ends at state 1 (different vector needed here, see paper for more details). 
%n=0
if n==0 
	if no_sigmas_equal == 0
			Q(1,1) =  exp(-s0*Delta); 
			Q(1,2) =  (l001*exp(-s01*Delta))/(s0 - s01) - (l001*exp(-s0*Delta))/(s0 - s01);
			Q(1,4) =  - (mu0*(exp(-s0*Delta) - 1))/s0 - (m01*(l001*s0*(exp(-s01*Delta) - 1) - l001*s01*(exp(-s0*Delta) - 1)))/(s0*s01*(s0 - s01));
			Q(2,2) =  exp(-s01*Delta);
			Q(2,4) =  -(m01*(exp(-s01*Delta) - 1))/s01;
			Q(3,1) =  (l10*exp(-s1*Delta))/(s0 - s1) - (l10*exp(-s0*Delta))/(s0 - s1);
			Q(3,3) =  exp(-s1*Delta); 
			Q(3,2) =  (l001*l10*exp(-s0*Delta))/((s0 - s01)*(s0 - s1)) - (l001*l10*exp(-s01*Delta))/((s0 - s01)*(s01 - s1)) + (l001*l10*exp(-s1*Delta))/((s0 - s1)*(s01 - s1));
			Q(3,4) =  - m01*((l001*l10*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)*(s0 - s1)) - (l001*l10*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)*(s01 - s1)) + (l001*l10*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)*(s01 - s1))) - (mu1*(exp(-s1*Delta) - 1))/s1 - (mu0*(l10*s0*(exp(-s1*Delta) - 1) - l10*s1*(exp(-s0*Delta) - 1)))/(s0*s1*(s0 - s1));
	elseif no_sigmas_equal == 1 
		if sigmas_equal(1) %s0=s01
			Q(1,1) = exp(-s0*Delta); 
			Q(1,2) = Delta*l001*exp(-Delta*s0); 
			Q(1,4) = l001*m01*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2) - (mu0*(exp(-Delta*s0) - 1))/s0;
			Q(2,2) = exp(-Delta*s0);
			Q(2,4) = -(m01*(exp(-Delta*s0) - 1))/s0; 
			Q(3,1) = (l10*exp(-Delta*s1))/(s0 - s1) - (l10*exp(-Delta*s0))/(s0 - s1);
			Q(3,2) = (l001*l10*exp(-Delta*s1))/(s0 - s1)^2 - (l001*l10*exp(-Delta*s0))/(s0 - s1)^2 - (Delta*l001*l10*exp(-Delta*s0))/(s0 - s1);
			Q(3,3) = exp(-Delta*s1);
			Q(3,4) = - m01*((l001*l10*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1) - (l001*l10*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l001*l10*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2)) - (mu1*(exp(-Delta*s1) - 1))/s1 - (mu0*(l10*s0*(exp(-Delta*s1) - 1) - l10*s1*(exp(-Delta*s0) - 1)))/(s0*s1*(s0 - s1));	
		elseif sigmas_equal(2) %s0=s1
			Q(1,1) = exp(-s1*Delta); 
			Q(1,2) = (l001*exp(-Delta*s1))/(s01 - s1) - (l001*exp(-Delta*s01))/(s01 - s1); 
			Q(1,4) = - (mu0*(exp(-s1*Delta) - 1))/s1 - (m01*(l001*s01*(exp(-s1*Delta) - 1) - l001*s1*(exp(-s01*Delta) - 1)))/(s01*s1*(s01 - s1));
			Q(2,2) = exp(-Delta*s01);
			Q(2,4) = -(m01*(exp(-s01*Delta) - 1))/s01; 
			Q(3,1) = Delta*l10*exp(-Delta*s1); 
			Q(3,2) = (l001*l10*exp(-Delta*s01))/(s01 - s1)^2 - (l001*l10*exp(-Delta*s1))/(s01 - s1)^2 + (Delta*l001*l10*exp(-Delta*s1))/(s01 - s1);
			Q(3,3) =  exp(-Delta*s1); 
			Q(3,4) = m01*((l001*l10*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1) - (l001*l10*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^2) + (l001*l10*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^2)) - (mu1*(exp(-s1*Delta) - 1))/s1 + l10*mu0*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2); 	
		elseif sigmas_equal(3) %s01=s1
			Q(1,1) = exp(-Delta*s0); 
			Q(1,2) = (l001*exp(-Delta*s1))/(s0 - s1) - (l001*exp(-Delta*s0))/(s0 - s1); 
			Q(1,4) = - (mu0*(exp(-Delta*s0) - 1))/s0 - (m01*(l001*s0*(exp(-Delta*s1) - 1) - l001*s1*(exp(-Delta*s0) - 1)))/(s0*s1*(s0 - s1));
			Q(2,2) = exp(-Delta*s1);
			Q(2,4) = -(m01*(exp(-Delta*s1) - 1))/s1;
			Q(3,1) = (l10*exp(-Delta*s1))/(s0 - s1) - (l10*exp(-Delta*s0))/(s0 - s1);
			Q(3,2) = (l001*l10*exp(-Delta*s0))/(s0 - s1)^2 - (l001*l10*exp(-Delta*s1))/(s0 - s1)^2 + (Delta*l001*l10*exp(-Delta*s1))/(s0 - s1);
			Q(3,3) = exp(-Delta*s1);
			Q(3,4) = m01*((l001*l10*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1) - (l001*l10*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l001*l10*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2)) - (mu1*(exp(-Delta*s1) - 1))/s1 - (mu0*(l10*s0*(exp(-Delta*s1) - 1) - l10*s1*(exp(-Delta*s0) - 1)))/(s0*s1*(s0 - s1));
		end
	elseif no_sigmas_equal == 3
			Q(1,1) = exp(-Delta*s1);
			Q(1,2) = Delta*l001*exp(-Delta*s1);
			Q(1,4) = l001*m01*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2) - (mu0*(exp(-Delta*s1) - 1))/s1;
			Q(2,2) = exp(-Delta*s1);
			Q(2,4) = -(m01*(exp(-Delta*s1) - 1))/s1;
			Q(3,1) = Delta*l10*exp(-Delta*s1); 
			Q(3,2) = (Delta^2*l001*l10*exp(-Delta*s1))/2;
			Q(3,3) = exp(-Delta*s1);
			Q(3,4) = l10*mu0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2) - (mu1*(exp(-Delta*s1) - 1))/s1 + (l001*l10*m01*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/2; 
	end 
elseif n==1 
    if no_sigmas_equal == 0
			Q(1,1) =  (exp(-s1*Delta)*(l001*l10*l011 + l01*l10*s01 - l01*l10*s1))/((s0 - s1)^2*(s01 - s1)) - (exp(-s0*Delta)*(l01*l10*s0^2 - 2*l01*l10*s0*s01 - 2*l001*l10*l011*s0 + l01*l10*s01^2 + l001*l10*l011*s01 + l001*l10*l011*s1))/((s0 - s01)^2*(s0 - s1)^2) + (Delta*exp(-s0*Delta)*(l001*l10*l011 - l01*l10*s0 + l01*l10*s01))/((s0 - s01)*(s0 - s1)) - (l001*l10*l011*exp(-s01*Delta))/((s0 - s01)^2*(s01 - s1));
			Q(1,2) =  (exp(-s0*Delta)*(- 3*l10*l011*l001^2*s0 + l10*l011*l001^2*s01 + 2*l10*l011*s1*l001^2 + 2*l01*l10*l001*s0^2 - 3*l01*l10*l001*s0*s01 - l01*l10*s1*l001*s0 + l01*l10*l001*s01^2 + l01*l10*s1*l001*s01))/((s0 - s01)^3*(s0 - s1)^2) + (exp(-s1*Delta)*(l001^2*l10*l011 + l001*l01*l10*s01 - l001*l01*l10*s1))/((s0 - s1)^2*(s01 - s1)^2) - (exp(-s01*Delta)*(l001^2*l10*l011*s0 - l001*l01*l10*s01^2 - 3*l001^2*l10*l011*s01 + 2*l001^2*l10*l011*s1 + l001*l01*l10*s0*s01 - l001*l01*l10*s0*s1 + l001*l01*l10*s01*s1))/((s0 - s01)^3*(s01 - s1)^2) - (Delta*exp(-s0*Delta)*(l001^2*l10*l011 - l001*l01*l10*s0 + l001*l01*l10*s01))/((s0 - s01)^2*(s0 - s1)) - (l001^2*l10*l011*Delta*exp(-s01*Delta))/((s0 - s01)^2*(s01 - s1));
			Q(1,3) =  (l01*exp(-s1*Delta))/(s0 - s1) - (l01*exp(-s0*Delta))/(s0 - s1);
			Q(1,4) =  mu0*((l01*l10*(exp(-s1*Delta) - 1))/((s0 - s1)^2*(s01 - s1)) + (l001*l10*l011*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)*(s0 - s1)) - (l01*l10*s0*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)*(s0 - s1)) + (l01*l10*s01*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)*(s0 - s1)) - (2*l001*l10*l011*(exp(-s0*Delta) - 1))/((s0 - s01)^2*(s0 - s1)^2) + (l01*l10*s0*(exp(-s0*Delta) - 1))/((s0 - s01)^2*(s0 - s1)^2) - (2*l01*l10*s01*(exp(-s0*Delta) - 1))/((s0 - s01)^2*(s0 - s1)^2) + (l001*l10*l011*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^2*(s01 - s1)) - (l001*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)) - (l01*l10*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)) + (l01*l10*s01^2*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)^2) + (l001*l10*l011*s01*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)^2) + (l001*l10*l011*s1*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)^2)) - mu1*((l001*l011*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)*(s0 - s1)) - (l01*(exp(-s1*Delta) - 1))/((s0 - s1)*(s01 - s1)) - (l01*(exp(-s0*Delta) - 1))/((s0 - s01)*(s0 - s1)) - (l001*l011*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)*(s01 - s1)) + (l001*l011*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)*(s01 - s1)) + (l01*s01*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)*(s0 - s1)) + (l01*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)*(s01 - s1))) - m01*((3*l001^2*l10*l011*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^2) - (3*l001^2*l10*l011*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^2) - (l001*l01*l10*(exp(-s1*Delta) - 1))/((s0 - s1)^2*(s01 - s1)^2) + (l001^2*l10*l011*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)^2*(s0 - s1)) + (l001^2*l10*l011*(1/s01^2 - (exp(-s01*Delta)*(s01*Delta + 1))/s01^2))/((s0 - s01)^2*(s01 - s1)) + (2*l001*l01*l10*s0*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^2) - (3*l001*l01*l10*s01*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^2) - (l001*l01*l10*s1*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^2) - (l001*l01*l10*s0*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^2) + (l001*l01*l10*s01*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^2) - (l001*l01*l10*s1*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^2) - (l001*l01*l10*s0*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)^2*(s0 - s1)) + (l001*l01*l10*s01*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)^2*(s0 - s1)) + (l001^2*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)^2) + (l001*l01*l10*s01^2*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^2) + (l001^2*l10*l011*s01*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^2) + (2*l001^2*l10*l011*s1*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^2) - (l001^2*l10*l011*s0*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^3*(s01 - s1)^2) - (2*l001^2*l10*l011*s1*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^3*(s01 - s1)^2) + (l001*l01*l10*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)^2) + (l001*l01*l10*s01*s1*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^2) + (l001*l01*l10*s0*s1*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^3*(s01 - s1)^2));
			Q(2,1) =  (l10*l011*exp(-s0*Delta))/((s0 - s01)*(s0 - s1)) - (l10*l011*exp(-s01*Delta))/((s0 - s01)*(s01 - s1)) + (l10*l011*exp(-s1*Delta))/((s0 - s1)*(s01 - s1));
			Q(2,2) =  (l001*l10*l011*exp(-s1*Delta))/((s0 - s1)*(s01 - s1)^2) - (l001*l10*l011*exp(-s0*Delta))/((s0 - s01)^2*(s0 - s1)) - (exp(-s01*Delta)*(l001*l10*l011*s0 - 2*l001*l10*l011*s01 + l001*l10*l011*s1))/((s0 - s01)^2*(s01 - s1)^2) - (l001*l10*l011*Delta*exp(-s01*Delta))/((s0 - s01)*(s01 - s1));
			Q(2,3) =  (l011*exp(-s1*Delta))/(s01 - s1) - (l011*exp(-s01*Delta))/(s01 - s1);
			Q(2,4) =  - m01*((l001*l10*l011*(1/s01^2 - (exp(-s01*Delta)*(s01*Delta + 1))/s01^2))/((s0 - s01)*(s01 - s1)) + (2*l001*l10*l011*(exp(-s01*Delta) - 1))/((s0 - s01)^2*(s01 - s1)^2) - (l001*l10*l011*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)) + (l001*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)*(s01 - s1)^2) - (l001*l10*l011*s0*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^2*(s01 - s1)^2) - (l001*l10*l011*s1*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^2*(s01 - s1)^2)) - mu0*((l10*l011*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)*(s0 - s1)) - (l10*l011*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)*(s01 - s1)) + (l10*l011*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)*(s01 - s1))) - (mu1*(l011*s01*(exp(-s1*Delta) - 1) - l011*s1*(exp(-s01*Delta) - 1)))/(s01*s1*(s01 - s1));
			Q(3,1) =  (exp(-s0*Delta)*(2*l01*l10^2*s0^2 - 4*l01*l10^2*s0*s01 - 3*l001*l011*l10^2*s0 + 2*l01*l10^2*s01^2 + 2*l001*l011*l10^2*s01 + l001*l011*s1*l10^2))/((s0 - s01)^2*(s0 - s1)^3) - (exp(-s1*Delta)*(2*l01*l10^2*s01^2 - 4*l01*l10^2*s01*s1 + 2*l001*l011*l10^2*s01 + 2*l01*l10^2*s1^2 - 3*l001*l011*l10^2*s1 + l001*l011*s0*l10^2))/((s0 - s1)^3*(s01 - s1)^2) - (Delta*exp(-s0*Delta)*(l001*l10^2*l011 - l01*l10^2*s0 + l01*l10^2*s01))/((s0 - s01)*(s0 - s1)^2) + (Delta*exp(-s1*Delta)*(l001*l10^2*l011 + l01*l10^2*s01 - l01*l10^2*s1))/((s0 - s1)^2*(s01 - s1)) + (l001*l10^2*l011*exp(-s01*Delta))/((s0 - s01)^2*(s01 - s1)^2);
			Q(3,2) =  (exp(-s01*Delta)*(2*l001^2*l10^2*l011*s0 - l001*l01*l10^2*s01^2 - 4*l001^2*l10^2*l011*s01 + 2*l001^2*l10^2*l011*s1 + l001*l01*l10^2*s0*s01 - l001*l01*l10^2*s0*s1 + l001*l01*l10^2*s01*s1))/((s0 - s01)^3*(s01 - s1)^3) - (exp(-s1*Delta)*(2*l011*l001^2*l10^2*s01 - 4*l011*l001^2*l10^2*s1 + 2*l011*s0*l001^2*l10^2 + 2*l01*l001*l10^2*s01^2 - 5*l01*l001*l10^2*s01*s1 + l01*s0*l001*l10^2*s01 + 3*l01*l001*l10^2*s1^2 - l01*s0*l001*l10^2*s1))/((s0 - s1)^3*(s01 - s1)^3) - (exp(-s0*Delta)*(- 4*l011*l001^2*l10^2*s0 + 2*l011*l001^2*l10^2*s01 + 2*l011*s1*l001^2*l10^2 + 3*l01*l001*l10^2*s0^2 - 5*l01*l001*l10^2*s0*s01 - l01*s1*l001*l10^2*s0 + 2*l01*l001*l10^2*s01^2 + l01*s1*l001*l10^2*s01))/((s0 - s01)^3*(s0 - s1)^3) + (Delta*exp(-s0*Delta)*(l001^2*l10^2*l011 - l001*l01*l10^2*s0 + l001*l01*l10^2*s01))/((s0 - s01)^2*(s0 - s1)^2) + (Delta*exp(-s1*Delta)*(l001^2*l10^2*l011 + l001*l01*l10^2*s01 - l001*l01*l10^2*s1))/((s0 - s1)^2*(s01 - s1)^2) + (l001^2*l10^2*l011*Delta*exp(-s01*Delta))/((s0 - s01)^2*(s01 - s1)^2);
			Q(3,3) =  (l01*l10*exp(-s0*Delta))/(s0 - s1)^2 - (l01*l10*exp(-s1*Delta))/(s0 - s1)^2 + (l01*l10*Delta*exp(-s1*Delta))/(s0 - s1);
			Q(3,4) =  mu1*((l001*l10*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)*(s01 - s1)) - (l01*l10*(exp(-s0*Delta) - 1))/((s0 - s01)*(s0 - s1)^2) + (l01*l10*s01*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)*(s01 - s1)) - (l01*l10*s1*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)*(s01 - s1)) - (2*l001*l10*l011*(exp(-s1*Delta) - 1))/((s0 - s1)^2*(s01 - s1)^2) - (2*l01*l10*s01*(exp(-s1*Delta) - 1))/((s0 - s1)^2*(s01 - s1)^2) + (l01*l10*s1*(exp(-s1*Delta) - 1))/((s0 - s1)^2*(s01 - s1)^2) + (l001*l10*l011*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)*(s0 - s1)^2) - (l001*l10*l011*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)*(s01 - s1)^2) + (l01*l10*s01*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)*(s0 - s1)^2) + (l01*l10*s01^2*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)^2) + (l001*l10*l011*s0*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)^2) + (l001*l10*l011*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^2*(s01 - s1)^2)) - mu0*((3*l001*l10^2*l011*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^2) - (3*l001*l10^2*l011*(exp(-s0*Delta) - 1))/((s0 - s01)^2*(s0 - s1)^3) + (2*l01*l10^2*s0*(exp(-s0*Delta) - 1))/((s0 - s01)^2*(s0 - s1)^3) - (4*l01*l10^2*s01*(exp(-s0*Delta) - 1))/((s0 - s01)^2*(s0 - s1)^3) + (4*l01*l10^2*s01*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^2) - (2*l01*l10^2*s1*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^2) + (l001*l10^2*l011*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)*(s0 - s1)^2) - (l001*l10^2*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)^2*(s01 - s1)) - (l01*l10^2*s0*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)*(s0 - s1)^2) + (l01*l10^2*s01*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)*(s0 - s1)^2) - (l01*l10^2*s01*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)^2*(s01 - s1)) + (l01*l10^2*s1*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)^2*(s01 - s1)) + (2*l01*l10^2*s01^2*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)^3) - (2*l01*l10^2*s01^2*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^2) + (l001*l10^2*l011*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^2*(s01 - s1)^2) + (2*l001*l10^2*l011*s01*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)^3) + (l001*l10^2*l011*s1*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^2*(s0 - s1)^3) - (l001*l10^2*l011*s0*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^2) - (2*l001*l10^2*l011*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^2)) + m01*((l001^2*l10^2*l011*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)^2*(s0 - s1)^2) + (l001^2*l10^2*l011*(1/s01^2 - (exp(-s01*Delta)*(s01*Delta + 1))/s01^2))/((s0 - s01)^2*(s01 - s1)^2) + (l001^2*l10^2*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)^2*(s01 - s1)^2) - (4*l001^2*l10^2*l011*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^3) + (4*l001^2*l10^2*l011*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^3) - (4*l001^2*l10^2*l011*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^3) - (l001*l01*l10^2*s0*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)^2*(s0 - s1)^2) + (l001*l01*l10^2*s01*(1/s0^2 - (exp(-s0*Delta)*(s0*Delta + 1))/s0^2))/((s0 - s01)^2*(s0 - s1)^2) + (l001*l01*l10^2*s01*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)^2*(s01 - s1)^2) - (l001*l01*l10^2*s1*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/((s0 - s1)^2*(s01 - s1)^2) + (3*l001*l01*l10^2*s0*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^3) - (5*l001*l01*l10^2*s01*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^3) - (l001*l01*l10^2*s1*(exp(-s0*Delta) - 1))/((s0 - s01)^3*(s0 - s1)^3) - (l001*l01*l10^2*s0*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^3) - (l001*l01*l10^2*s0*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^3) + (l001*l01*l10^2*s01*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^3) - (5*l001*l01*l10^2*s01*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^3) - (l001*l01*l10^2*s1*(exp(-s01*Delta) - 1))/((s0 - s01)^3*(s01 - s1)^3) + (3*l001*l01*l10^2*s1*(exp(-s1*Delta) - 1))/((s0 - s1)^3*(s01 - s1)^3) + (2*l001*l01*l10^2*s01^2*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^3) + (2*l001*l01*l10^2*s01^2*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^3) + (2*l001^2*l10^2*l011*s01*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^3) + (2*l001^2*l10^2*l011*s1*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^3) - (2*l001^2*l10^2*l011*s0*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^3*(s01 - s1)^3) + (2*l001^2*l10^2*l011*s0*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^3) + (2*l001^2*l10^2*l011*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^3) - (2*l001^2*l10^2*l011*s1*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^3*(s01 - s1)^3) + (l001*l01*l10^2*s01*s1*(exp(-s0*Delta) - 1))/(s0*(s0 - s01)^3*(s0 - s1)^3) + (l001*l01*l10^2*s0*s01*(exp(-s1*Delta) - 1))/(s1*(s0 - s1)^3*(s01 - s1)^3) + (l001*l01*l10^2*s0*s1*(exp(-s01*Delta) - 1))/(s01*(s0 - s01)^3*(s01 - s1)^3)); 
	elseif no_sigmas_equal == 1
		if sigmas_equal(1) %s0=s01
			Q(1,1) = (exp(-Delta*s1)*(l001*l10*l011 + l01*l10*s0 - l01*l10*s1))/(s0 - s1)^3 - (exp(-Delta*s0)*(l001*l10*l011 + l01*l10*s0 - l01*l10*s1))/(s0 - s1)^3 - (Delta*exp(-Delta*s0)*(l001*l10*l011 + l01*l10*s0 - l01*l10*s1))/(s0 - s1)^2 - (Delta^2*l001*l10*l011*exp(-Delta*s0))/(2*(s0 - s1));
			Q(1,2) = (exp(-Delta*s1)*(l001^2*l10*l011 + l001*l01*l10*s0 - l001*l01*l10*s1))/(s0 - s1)^4 - (exp(-Delta*s0)*(l001^2*l10*l011 + l001*l01*l10*s0 - l001*l01*l10*s1))/(s0 - s1)^4 - (Delta^2*exp(-Delta*s0)*(l001^2*l10*l011 + l001*l01*l10*s0 - l001*l01*l10*s1))/(2*(s0 - s1)^2) - (Delta*exp(-Delta*s0)*(l001^2*l10*l011 + l001*l01*l10*s0 - l001*l01*l10*s1))/(s0 - s1)^3 - (Delta^3*l001^2*l10*l011*exp(-Delta*s0))/(6*(s0 - s1));
			Q(1,3) = (l01*exp(-Delta*s1))/(s0 - s1) - (l01*exp(-Delta*s0))/(s0 - s1);
			Q(2,1) = (l10*l011*exp(-Delta*s1))/(s0 - s1)^2 - (l10*l011*exp(-Delta*s0))/(s0 - s1)^2 - (Delta*l10*l011*exp(-Delta*s0))/(s0 - s1);
			Q(2,2) = (l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^3 - (l001*l10*l011*exp(-Delta*s0))/(s0 - s1)^3 - (Delta*l001*l10*l011*exp(-Delta*s0))/(s0 - s1)^2 - (Delta^2*l001*l10*l011*exp(-Delta*s0))/(2*(s0 - s1));
			Q(2,3) = (l011*exp(-Delta*s1))/(s0 - s1) - (l011*exp(-Delta*s0))/(s0 - s1);
			Q(3,1) = (exp(-Delta*s0)*(3*l001*l10^2*l011 + 2*l01*l10^2*s0 - 2*l01*l10^2*s1))/(s0 - s1)^4 - (exp(-Delta*s1)*(3*l001*l10^2*l011 + 2*l01*l10^2*s0 - 2*l01*l10^2*s1))/(s0 - s1)^4 + (Delta*exp(-Delta*s1)*(l001*l10^2*l011 + l01*l10^2*s0 - l01*l10^2*s1))/(s0 - s1)^3 + (Delta*exp(-Delta*s0)*(2*l001*l10^2*l011 + l01*l10^2*s0 - l01*l10^2*s1))/(s0 - s1)^3 + (Delta^2*l001*l10^2*l011*exp(-Delta*s0))/(2*(s0 - s1)^2);
			Q(3,2) = (exp(-Delta*s0)*(4*l001^2*l10^2*l011 + 3*l001*l01*l10^2*s0 - 3*l001*l01*l10^2*s1))/(s0 - s1)^5 - (exp(-Delta*s1)*(4*l001^2*l10^2*l011 + 3*l001*l01*l10^2*s0 - 3*l001*l01*l10^2*s1))/(s0 - s1)^5 + (Delta^2*exp(-Delta*s0)*(2*l001^2*l10^2*l011 + l001*l01*l10^2*s0 - l001*l01*l10^2*s1))/(2*(s0 - s1)^3) + (Delta*exp(-Delta*s1)*(l001^2*l10^2*l011 + l001*l01*l10^2*s0 - l001*l01*l10^2*s1))/(s0 - s1)^4 + (Delta*exp(-Delta*s0)*(3*l001^2*l10^2*l011 + 2*l001*l01*l10^2*s0 - 2*l001*l01*l10^2*s1))/(s0 - s1)^4 + (Delta^3*l001^2*l10^2*l011*exp(-Delta*s0))/(6*(s0 - s1)^2);
			Q(3,3) = (l01*l10*exp(-Delta*s0))/(s0 - s1)^2 - (l01*l10*exp(-Delta*s1))/(s0 - s1)^2 + (Delta*l01*l10*exp(-Delta*s1))/(s0 - s1);
			Q(1,4) = - m01*((l001^2*l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (l001^2*l10*l011*(6/s0^4 - (exp(-Delta*s0)*(Delta^3*s0^3 + 3*Delta^2*s0^2 + 6*Delta*s0 + 6))/s0^4))/(6*(s0 - s1)) - (l001*l01*l10*(exp(-Delta*s0) - 1))/(s0 - s1)^4 - (l001*l01*l10*(exp(-Delta*s1) - 1))/(s0 - s1)^4 + (l001^2*l10*l011*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)^2) + (l001*l01*l10*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 - (l001*l01*l10*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (l001*l01*l10*s0*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)^2) - (l001*l01*l10*s1*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)^2) - (l001^2*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) + (l001^2*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4) + (l001*l01*l10*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) + (l001*l01*l10*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4)) - mu1*((l001*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1) - (l01*(exp(-Delta*s1) - 1))/(s0 - s1)^2 - (l01*(exp(-Delta*s0) - 1))/(s0 - s1)^2 - (l001*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l001*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2) + (l01*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l01*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2)) - mu0*((l01*l10*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 - (l01*l10*(exp(-Delta*s1) - 1))/(s0 - s1)^3 - (l01*l10*(exp(-Delta*s0) - 1))/(s0 - s1)^3 - (l01*l10*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 + (l001*l10*l011*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)) + (l001*l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 - (l001*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (l001*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3) + (l01*l10*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (l01*l10*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3));
			Q(2,4) = - m01*((l001*l10*l011*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)) + (l001*l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 - (l001*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (l001*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3)) - mu0*((l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1) - (l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2)) - (mu1*(l011*s0*(exp(-Delta*s1) - 1) - l011*s1*(exp(-Delta*s0) - 1)))/(s0*s1*(s0 - s1));
			Q(3,4) = mu1*((l01*l10*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 - (l01*l10*(exp(-Delta*s1) - 1))/(s0 - s1)^3 - (l01*l10*(exp(-Delta*s0) - 1))/(s0 - s1)^3 - (l01*l10*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 + (l001*l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 + (l001*l10*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 - (2*l001*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (2*l001*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3) + (l01*l10*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (l01*l10*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3)) + mu0*((2*l001*l10^2*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 - (2*l01*l10^2*(exp(-Delta*s1) - 1))/(s0 - s1)^4 - (2*l01*l10^2*(exp(-Delta*s0) - 1))/(s0 - s1)^4 + (l001*l10^2*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 + (l01*l10^2*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 - (l01*l10^2*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (l01*l10^2*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 - (l01*l10^2*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 + (l001*l10^2*l011*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)^2) - (3*l001*l10^2*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) + (3*l001*l10^2*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4) + (2*l01*l10^2*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) + (2*l01*l10^2*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4)) + m01*((3*l001^2*l10^2*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^4 + (l001^2*l10^2*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^4 + (l001^2*l10^2*l011*(6/s0^4 - (exp(-Delta*s0)*(Delta^3*s0^3 + 3*Delta^2*s0^2 + 6*Delta*s0 + 6))/s0^4))/(6*(s0 - s1)^2) - (3*l001*l01*l10^2*(exp(-Delta*s0) - 1))/(s0 - s1)^5 - (3*l001*l01*l10^2*(exp(-Delta*s1) - 1))/(s0 - s1)^5 + (l001^2*l10^2*l011*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(s0 - s1)^3 + (l001*l01*l10^2*s0*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)^3) - (l001*l01*l10^2*s1*(2/s0^3 - (exp(-Delta*s0)*(Delta^2*s0^2 + 2*Delta*s0 + 2))/s0^3))/(2*(s0 - s1)^3) - (4*l001^2*l10^2*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^5) + (4*l001^2*l10^2*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^5) + (2*l001*l01*l10^2*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^4 - (2*l001*l01*l10^2*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^4 + (l001*l01*l10^2*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^4 - (l001*l01*l10^2*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^4 + (3*l001*l01*l10^2*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^5) + (3*l001*l01*l10^2*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^5));
		elseif sigmas_equal(2) %s0=s1
			Q(1,1) = (Delta^2*exp(-Delta*s1)*(l001*l10*l011 + l01*l10*s01 - l01*l10*s1))/(2*(s01 - s1)) - (l001*l10*l011*exp(-Delta*s01))/(s01 - s1)^3 + (l001*l10*l011*exp(-Delta*s1))/(s01 - s1)^3 - (Delta*l001*l10*l011*exp(-Delta*s1))/(s01 - s1)^2;
			Q(1,2) = (exp(-Delta*s1)*(3*l001^2*l10*l011 + l001*l01*l10*s01 - l001*l01*l10*s1))/(s01 - s1)^4 - (exp(-Delta*s01)*(3*l001^2*l10*l011 + l001*l01*l10*s01 - l001*l01*l10*s1))/(s01 - s1)^4 + (Delta^2*exp(-Delta*s1)*(l001^2*l10*l011 + l001*l01*l10*s01 - l001*l01*l10*s1))/(2*(s01 - s1)^2) - (Delta*exp(-Delta*s1)*(2*l001^2*l10*l011 + l001*l01*l10*s01 - l001*l01*l10*s1))/(s01 - s1)^3 - (Delta*l001^2*l10*l011*exp(-Delta*s01))/(s01 - s1)^3;
			Q(1,3) = Delta*l01*exp(-Delta*s1);
			Q(1,4) = mu1*((l001*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1) + (l01*s01*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1) - (l01*s1*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1) - (l001*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^2) + (l001*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^2)) - mu0*((l001*l10*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^2 - (l001*l10*l011*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)) - (l01*l10*s01*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)) + (l01*l10*s1*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)) - (l001*l10*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^3) + (l001*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^3)) - m01*((l001^2*l10*l011*(1/s01^2 - (exp(-s01*Delta)*(s01*Delta + 1))/s01^2))/(s01 - s1)^3 - (l001*l01*l10*(exp(-s01*Delta) - 1))/(s01 - s1)^4 - (l001*l01*l10*(exp(-s1*Delta) - 1))/(s01 - s1)^4 - (l001^2*l10*l011*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)^2) + (2*l001^2*l10*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^3 - (l001*l01*l10*s01*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)^2) + (l001*l01*l10*s1*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)^2) + (l001*l01*l10*s01*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^3 - (l001*l01*l10*s1*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^3 - (3*l001^2*l10*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^4) + (3*l001^2*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^4) + (l001*l01*l10*s01*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^4) + (l001*l01*l10*s1*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^4));
			Q(2,1) = (l10*l011*exp(-Delta*s01))/(s01 - s1)^2 - (l10*l011*exp(-Delta*s1))/(s01 - s1)^2 + (Delta*l10*l011*exp(-Delta*s1))/(s01 - s1);
			Q(2,2) = (2*l001*l10*l011*exp(-Delta*s01))/(s01 - s1)^3 - (2*l001*l10*l011*exp(-Delta*s1))/(s01 - s1)^3 + (Delta*l001*l10*l011*exp(-Delta*s01))/(s01 - s1)^2 + (Delta*l001*l10*l011*exp(-Delta*s1))/(s01 - s1)^2;
			Q(2,3) = (l011*exp(-Delta*s1))/(s01 - s1) - (l011*exp(-Delta*s01))/(s01 - s1);
			Q(2,4) = mu0*((l10*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1) - (l10*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^2) + (l10*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^2)) + m01*((l001*l10*l011*(1/s01^2 - (exp(-s01*Delta)*(s01*Delta + 1))/s01^2))/(s01 - s1)^2 + (l001*l10*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^2 - (2*l001*l10*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^3) + (2*l001*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^3)) - (mu1*(l011*s01*(exp(-s1*Delta) - 1) - l011*s1*(exp(-s01*Delta) - 1)))/(s01*s1*(s01 - s1));
			Q(3,1) = (Delta^3*exp(-Delta*s1)*(l001*l10^2*l011 + l01*l10^2*s01 - l01*l10^2*s1))/(6*(s01 - s1)) + (l001*l10^2*l011*exp(-Delta*s01))/(s01 - s1)^4 - (l001*l10^2*l011*exp(-Delta*s1))/(s01 - s1)^4 - (Delta^2*l001*l10^2*l011*exp(-Delta*s1))/(2*(s01 - s1)^2) + (Delta*l001*l10^2*l011*exp(-Delta*s1))/(s01 - s1)^3;
			Q(3,2) = (exp(-Delta*s01)*(4*l001^2*l10^2*l011 + l001*l01*l10^2*s01 - l001*l01*l10^2*s1))/(s01 - s1)^5 - (exp(-Delta*s1)*(4*l001^2*l10^2*l011 + l001*l01*l10^2*s01 - l001*l01*l10^2*s1))/(s01 - s1)^5 + (Delta^3*exp(-Delta*s1)*(l001^2*l10^2*l011 + l001*l01*l10^2*s01 - l001*l01*l10^2*s1))/(6*(s01 - s1)^2) - (Delta^2*exp(-Delta*s1)*(2*l001^2*l10^2*l011 + l001*l01*l10^2*s01 - l001*l01*l10^2*s1))/(2*(s01 - s1)^3) + (Delta*exp(-Delta*s1)*(3*l001^2*l10^2*l011 + l001*l01*l10^2*s01 - l001*l01*l10^2*s1))/(s01 - s1)^4 + (Delta*l001^2*l10^2*l011*exp(-Delta*s01))/(s01 - s1)^4;
			Q(3,3) = (Delta^2*l01*l10*exp(-Delta*s1))/2;
			Q(3,4) = mu0*((l001*l10^2*l011*(6/s1^4 - (exp(-s1*Delta)*(s1^3*Delta^3 + 3*s1^2*Delta^2 + 6*s1*Delta + 6))/s1^4))/(6*(s01 - s1)) - (l001*l10^2*l011*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)^2) + (l01*l10^2*s01*(6/s1^4 - (exp(-s1*Delta)*(s1^3*Delta^3 + 3*s1^2*Delta^2 + 6*s1*Delta + 6))/s1^4))/(6*(s01 - s1)) - (l01*l10^2*s1*(6/s1^4 - (exp(-s1*Delta)*(s1^3*Delta^3 + 3*s1^2*Delta^2 + 6*s1*Delta + 6))/s1^4))/(6*(s01 - s1)) + (l001*l10^2*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^3 - (l001*l10^2*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^4) + (l001*l10^2*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^4)) + m01*((l001^2*l10^2*l011*(1/s01^2 - (exp(-s01*Delta)*(s01*Delta + 1))/s01^2))/(s01 - s1)^4 - (l001*l01*l10^2*(exp(-s1*Delta) - 1))/(s01 - s1)^5 - (l001*l01*l10^2*(exp(-s01*Delta) - 1))/(s01 - s1)^5 + (3*l001^2*l10^2*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^4 - (l001^2*l10^2*l011*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(s01 - s1)^3 + (l001^2*l10^2*l011*(6/s1^4 - (exp(-s1*Delta)*(s1^3*Delta^3 + 3*s1^2*Delta^2 + 6*s1*Delta + 6))/s1^4))/(6*(s01 - s1)^2) + (l001*l01*l10^2*s01*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^4 - (l001*l01*l10^2*s1*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^4 - (4*l001^2*l10^2*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^5) + (4*l001^2*l10^2*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^5) - (l001*l01*l10^2*s01*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)^3) + (l001*l01*l10^2*s1*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)^3) + (l001*l01*l10^2*s01*(6/s1^4 - (exp(-s1*Delta)*(s1^3*Delta^3 + 3*s1^2*Delta^2 + 6*s1*Delta + 6))/s1^4))/(6*(s01 - s1)^2) - (l001*l01*l10^2*s1*(6/s1^4 - (exp(-s1*Delta)*(s1^3*Delta^3 + 3*s1^2*Delta^2 + 6*s1*Delta + 6))/s1^4))/(6*(s01 - s1)^2) + (l001*l01*l10^2*s01*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^5) + (l001*l01*l10^2*s1*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^5)) - mu1*((l001*l10*l011*(1/s1^2 - (exp(-s1*Delta)*(s1*Delta + 1))/s1^2))/(s01 - s1)^2 - (l001*l10*l011*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)) - (l01*l10*s01*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)) + (l01*l10*s1*(2/s1^3 - (exp(-s1*Delta)*(s1^2*Delta^2 + 2*s1*Delta + 2))/s1^3))/(2*(s01 - s1)) - (l001*l10*l011*(exp(-s01*Delta) - 1))/(s01*(s01 - s1)^3) + (l001*l10*l011*(exp(-s1*Delta) - 1))/(s1*(s01 - s1)^3)); 
		elseif sigmas_equal(3) %s01=s1
			Q(1,1) = (exp(-Delta*s0)*(2*l001*l10*l011 - l01*l10*s0 + l01*l10*s1))/(s0 - s1)^3 - (exp(-Delta*s1)*(2*l001*l10*l011 - l01*l10*s0 + l01*l10*s1))/(s0 - s1)^3 + (Delta*exp(-Delta*s0)*(l001*l10*l011 - l01*l10*s0 + l01*l10*s1))/(s0 - s1)^2 + (Delta*l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^2; 
			Q(1,2) = (exp(-Delta*s1)*(3*l001^2*l10*l011 - 2*l001*l01*l10*s0 + 2*l001*l01*l10*s1))/(s0 - s1)^4 - (exp(-Delta*s0)*(3*l001^2*l10*l011 - 2*l001*l01*l10*s0 + 2*l001*l01*l10*s1))/(s0 - s1)^4 - (Delta*exp(-Delta*s0)*(l001^2*l10*l011 - l001*l01*l10*s0 + l001*l01*l10*s1))/(s0 - s1)^3 - (Delta*exp(-Delta*s1)*(2*l001^2*l10*l011 - l001*l01*l10*s0 + l001*l01*l10*s1))/(s0 - s1)^3 + (Delta^2*l001^2*l10*l011*exp(-Delta*s1))/(2*(s0 - s1)^2);
			Q(1,3) = (l01*exp(-Delta*s1))/(s0 - s1) - (l01*exp(-Delta*s0))/(s0 - s1);
			Q(1,4) = mu0*((l01*l10*(exp(-Delta*s0) - 1))/(s0 - s1)^3 + (l01*l10*(exp(-Delta*s1) - 1))/(s0 - s1)^3 - (l01*l10*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 + (l01*l10*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 + (l001*l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^2 + (l001*l10*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 - (2*l001*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (2*l001*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3) - (l01*l10*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) - (l01*l10*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3)) - m01*((l001^2*l10*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (2*l001^2*l10*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 + (2*l001*l01*l10*(exp(-Delta*s0) - 1))/(s0 - s1)^4 + (2*l001*l01*l10*(exp(-Delta*s1) - 1))/(s0 - s1)^4 - (l001^2*l10*l011*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(2*(s0 - s1)^2) - (l001*l01*l10*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (l001*l01*l10*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 - (l001*l01*l10*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 + (l001*l01*l10*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 - (3*l001^2*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) + (3*l001^2*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4) - (2*l001*l01*l10*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) - (2*l001*l01*l10*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4)) + mu1*((l01*(exp(-Delta*s0) - 1))/(s0 - s1)^2 + (l01*(exp(-Delta*s1) - 1))/(s0 - s1)^2 + (l001*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1) - (l001*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l001*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2) - (l01*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) - (l01*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2));
			Q(2,1) = (l10*l011*exp(-Delta*s0))/(s0 - s1)^2 - (l10*l011*exp(-Delta*s1))/(s0 - s1)^2 + (Delta*l10*l011*exp(-Delta*s1))/(s0 - s1);
			Q(2,2) = (l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^3 - (l001*l10*l011*exp(-Delta*s0))/(s0 - s1)^3 - (Delta*l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^2 + (Delta^2*l001*l10*l011*exp(-Delta*s1))/(2*(s0 - s1));
			Q(2,3) = Delta*l011*exp(-Delta*s1);
			Q(2,4) = m01*((l001*l10*l011*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(2*(s0 - s1)) - (l001*l10*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 + (l001*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) - (l001*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3)) + mu0*((l10*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1) - (l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^2) + (l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^2)) + l011*mu1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2);
			Q(3,1) = (exp(-Delta*s1)*(3*l001*l10^2*l011 - 2*l01*l10^2*s0 + 2*l01*l10^2*s1))/(s0 - s1)^4 - (exp(-Delta*s0)*(3*l001*l10^2*l011 - 2*l01*l10^2*s0 + 2*l01*l10^2*s1))/(s0 - s1)^4 - (Delta*exp(-Delta*s0)*(l001*l10^2*l011 - l01*l10^2*s0 + l01*l10^2*s1))/(s0 - s1)^3 - (Delta*exp(-Delta*s1)*(2*l001*l10^2*l011 - l01*l10^2*s0 + l01*l10^2*s1))/(s0 - s1)^3 + (Delta^2*l001*l10^2*l011*exp(-Delta*s1))/(2*(s0 - s1)^2);
			Q(3,2) = (exp(-Delta*s0)*(4*l001^2*l10^2*l011 - 3*l001*l01*l10^2*s0 + 3*l001*l01*l10^2*s1))/(s0 - s1)^5 - (exp(-Delta*s1)*(4*l001^2*l10^2*l011 - 3*l001*l01*l10^2*s0 + 3*l001*l01*l10^2*s1))/(s0 - s1)^5 - (Delta^2*exp(-Delta*s1)*(2*l001^2*l10^2*l011 - l001*l01*l10^2*s0 + l001*l01*l10^2*s1))/(2*(s0 - s1)^3) + (Delta*exp(-Delta*s0)*(l001^2*l10^2*l011 - l001*l01*l10^2*s0 + l001*l01*l10^2*s1))/(s0 - s1)^4 + (Delta*exp(-Delta*s1)*(3*l001^2*l10^2*l011 - 2*l001*l01*l10^2*s0 + 2*l001*l01*l10^2*s1))/(s0 - s1)^4 + (Delta^3*l001^2*l10^2*l011*exp(-Delta*s1))/(6*(s0 - s1)^2);
			Q(3,3) = (l01*l10*exp(-Delta*s0))/(s0 - s1)^2 - (l01*l10*exp(-Delta*s1))/(s0 - s1)^2 + (Delta*l01*l10*exp(-Delta*s1))/(s0 - s1);
			Q(3,4) = m01*((l001^2*l10^2*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^4 + (3*l001^2*l10^2*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^4 + (l001^2*l10^2*l011*(6/s1^4 - (exp(-Delta*s1)*(Delta^3*s1^3 + 3*Delta^2*s1^2 + 6*Delta*s1 + 6))/s1^4))/(6*(s0 - s1)^2) + (3*l001*l01*l10^2*(exp(-Delta*s0) - 1))/(s0 - s1)^5 + (3*l001*l01*l10^2*(exp(-Delta*s1) - 1))/(s0 - s1)^5 - (l001^2*l10^2*l011*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(s0 - s1)^3 + (l001*l01*l10^2*s0*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(2*(s0 - s1)^3) - (l001*l01*l10^2*s1*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(2*(s0 - s1)^3) - (4*l001^2*l10^2*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^5) + (4*l001^2*l10^2*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^5) - (l001*l01*l10^2*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^4 + (l001*l01*l10^2*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^4 - (2*l001*l01*l10^2*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^4 + (2*l001*l01*l10^2*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^4 - (3*l001*l01*l10^2*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^5) - (3*l001*l01*l10^2*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^5)) - mu0*((2*l01*l10^2*(exp(-Delta*s0) - 1))/(s0 - s1)^4 + (2*l01*l10^2*(exp(-Delta*s1) - 1))/(s0 - s1)^4 + (l001*l10^2*l011*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (2*l001*l10^2*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 - (l01*l10^2*s0*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 + (l01*l10^2*s1*(1/s0^2 - (exp(-Delta*s0)*(Delta*s0 + 1))/s0^2))/(s0 - s1)^3 - (l01*l10^2*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 + (l01*l10^2*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^3 - (l001*l10^2*l011*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(2*(s0 - s1)^2) - (3*l001*l10^2*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) + (3*l001*l10^2*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4) - (2*l01*l10^2*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^4) - (2*l01*l10^2*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^4)) - mu1*((l01*l10*(exp(-Delta*s0) - 1))/(s0 - s1)^3 + (l01*l10*(exp(-Delta*s1) - 1))/(s0 - s1)^3 - (l01*l10*s0*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 + (l01*l10*s1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 - (l001*l10*l011*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/(2*(s0 - s1)) + (l001*l10*l011*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2))/(s0 - s1)^2 - (l001*l10*l011*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) + (l001*l10*l011*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3) - (l01*l10*s1*(exp(-Delta*s0) - 1))/(s0*(s0 - s1)^3) - (l01*l10*s0*(exp(-Delta*s1) - 1))/(s1*(s0 - s1)^3));	
		end 
	elseif no_sigmas_equal ==3 
			Q(1,1) = (Delta^2*l01*l10*exp(-Delta*s1))/2 + (Delta^3*l001*l10*l011*exp(-Delta*s1))/6;
			Q(1,2) = (Delta^4*l001^2*l10*l011*exp(-Delta*s1))/24 + (Delta^3*l001*l01*l10*exp(-Delta*s1))/6; 
			Q(1,3) = Delta*l01*exp(-Delta*s1);
			Q(1,4) = mu1*(l01*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2) + (l001*l011*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/2) + m01*((l10*l011*(24/s1^5 - (exp(-Delta*s1)*(Delta^4*s1^4 + 4*Delta^3*s1^3 + 12*Delta^2*s1^2 + 24*Delta*s1 + 24))/s1^5)*l001^2)/24 + (l01*l10*(6/s1^4 - (exp(-Delta*s1)*(Delta^3*s1^3 + 3*Delta^2*s1^2 + 6*Delta*s1 + 6))/s1^4)*l001)/6) + mu0*((l01*l10*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/2 + (l001*l10*l011*(6/s1^4 - (exp(-Delta*s1)*(Delta^3*s1^3 + 3*Delta^2*s1^2 + 6*Delta*s1 + 6))/s1^4))/6);
			Q(2,1) = (Delta^2*l10*l011*exp(-Delta*s1))/2;
			Q(2,2) = (Delta^3*l001*l10*l011*exp(-Delta*s1))/6;
			Q(2,3) = Delta*l011*exp(-Delta*s1);
			Q(2,4) = l011*mu1*(1/s1^2 - (exp(-Delta*s1)*(Delta*s1 + 1))/s1^2) + (l10*l011*mu0*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/2 + (l001*l10*l011*m01*(6/s1^4 - (exp(-Delta*s1)*(Delta^3*s1^3 + 3*Delta^2*s1^2 + 6*Delta*s1 + 6))/s1^4))/6;
			Q(3,1) = (Delta^3*l01*l10^2*exp(-Delta*s1))/6 + (Delta^4*l001*l10^2*l011*exp(-Delta*s1))/24;
			Q(3,2) = (Delta^4*l001*l01*l10^2*exp(-Delta*s1))/24 + (Delta^5*l001^2*l10^2*l011*exp(-Delta*s1))/120; 
			Q(3,3) = (Delta^2*l01*l10*exp(-Delta*s1))/2; 
			Q(3,4) = mu0*((l01*l10^2*(6/s1^4 - (exp(-Delta*s1)*(Delta^3*s1^3 + 3*Delta^2*s1^2 + 6*Delta*s1 + 6))/s1^4))/6 + (l001*l10^2*l011*(24/s1^5 - (exp(-Delta*s1)*(Delta^4*s1^4 + 4*Delta^3*s1^3 + 12*Delta^2*s1^2 + 24*Delta*s1 + 24))/s1^5))/24) + m01*((l011*(120/s1^6 - (exp(-Delta*s1)*(Delta^5*s1^5 + 5*Delta^4*s1^4 + 20*Delta^3*s1^3 + 60*Delta^2*s1^2 + 120*Delta*s1 + 120))/s1^6)*l001^2*l10^2)/120 + (l01*(24/s1^5 - (exp(-Delta*s1)*(Delta^4*s1^4 + 4*Delta^3*s1^3 + 12*Delta^2*s1^2 + 24*Delta*s1 + 24))/s1^5)*l001*l10^2)/24) + mu1*((l01*l10*(2/s1^3 - (exp(-Delta*s1)*(Delta^2*s1^2 + 2*Delta*s1 + 2))/s1^3))/2 + (l001*l10*l011*(6/s1^4 - (exp(-Delta*s1)*(Delta^3*s1^3 + 3*Delta^2*s1^2 + 6*Delta*s1 + 6))/s1^4))/6);
	end 
elseif n==2 
    if no_sigmas_equal == 0    
% 		Q(1,1) =  (exp(-s0*Delta)*(10*l001^2*l10^2*l011^2*s0^2 - 10*l001^2*l10^2*l011^2*s0*s01 - 10*l001^2*l10^2*l011^2*s0*s1 + 3*l001^2*l10^2*l011^2*s01^2 + 4*l001^2*l10^2*l011^2*s01*s1 + 3*l001^2*l10^2*l011^2*s1^2 - 12*l001*l01*l10^2*l011*s0^3 + 28*l001*l01*l10^2*l011*s0^2*s01 + 8*l001*l01*l10^2*l011*s0^2*s1 - 22*l001*l01*l10^2*l011*s0*s01^2 - 12*l001*l01*l10^2*l011*s0*s01*s1 - 2*l001*l01*l10^2*l011*s0*s1^2 + 6*l001*l01*l10^2*l011*s01^3 + 4*l001*l01*l10^2*l011*s01^2*s1 + 2*l001*l01*l10^2*l011*s01*s1^2 + 3*l01^2*l10^2*s0^4 - 12*l01^2*l10^2*s0^3*s01 + 18*l01^2*l10^2*s0^2*s01^2 - 12*l01^2*l10^2*s0*s01^3 + 3*l01^2*l10^2*s01^4))/((s0 - s01)^4*(s0 - s1)^4) + (exp(-s01*Delta)*(2*l001^2*l10^2*l011^2*s0 - 5*l001^2*l10^2*l011^2*s01 + 3*l001^2*l10^2*l011^2*s1 - 2*l001*l01*l10^2*l011*s01^2 + 2*l001*l01*l10^2*l011*s0*s01 - 2*l001*l01*l10^2*l011*s0*s1 + 2*l001*l01*l10^2*l011*s01*s1))/((s0 - s01)^4*(s01 - s1)^3) - (exp(-s1*Delta)*(3*l001^2*l10^2*l011^2*s01 - 5*l001^2*l10^2*l011^2*s1 + 2*s0*l001^2*l10^2*l011^2 + 6*l001*l01*l10^2*l011*s01^2 - 14*l001*l01*l10^2*l011*s01*s1 + 2*s0*l001*l01*l10^2*l011*s01 + 8*l001*l01*l10^2*l011*s1^2 - 2*s0*l001*l01*l10^2*l011*s1 + 3*l01^2*l10^2*s01^3 - 9*l01^2*l10^2*s01^2*s1 + 9*l01^2*l10^2*s01*s1^2 - 3*l01^2*l10^2*s1^3))/((s0 - s1)^4*(s01 - s1)^3) - (Delta*exp(-s0*Delta)*(- 4*l001^2*l10^2*l011^2*s0 + 2*l001^2*l10^2*l011^2*s01 + 2*s1*l001^2*l10^2*l011^2 + 6*l001*l01*l10^2*l011*s0^2 - 10*l001*l01*l10^2*l011*s0*s01 - 2*s1*l001*l01*l10^2*l011*s0 + 4*l001*l01*l10^2*l011*s01^2 + 2*s1*l001*l01*l10^2*l011*s01 - 2*l01^2*l10^2*s0^3 + 6*l01^2*l10^2*s0^2*s01 - 6*l01^2*l10^2*s0*s01^2 + 2*l01^2*l10^2*s01^3))/((s0 - s01)^3*(s0 - s1)^3) + (Delta^2*exp(-s0*Delta)*(l001^2*l10^2*l011^2 - 2*l001*l01*l10^2*l011*s0 + 2*l001*l01*l10^2*l011*s01 + l01^2*l10^2*s0^2 - 2*l01^2*l10^2*s0*s01 + l01^2*l10^2*s01^2))/(2*(s0 - s01)^2*(s0 - s1)^2) + (Delta*exp(-s1*Delta)*(l001^2*l10^2*l011^2 + 2*l001*l01*l10^2*l011*s01 - 2*l001*l01*l10^2*l011*s1 + l01^2*l10^2*s01^2 - 2*l01^2*l10^2*s01*s1 + l01^2*l10^2*s1^2))/((s0 - s1)^3*(s01 - s1)^2) + (l001^2*l10^2*l011^2*Delta*exp(-s01*Delta))/((s0 - s01)^3*(s01 - s1)^2);
% 		Q(1,3) =  (l01*exp(-s0*Delta))/(s0 - s1)^2 - (l01*exp(-s1*Delta))/(s0 - s1)^2 + (l01*Delta*exp(-s1*Delta))/(s0 - s1);
% 		Q(1,2) =  (exp(-s01*Delta)*(3*l001^3*l10^2*l011^2*s0^2 - 12*l001^3*l10^2*l011^2*s0*s01 + 6*l001^3*l10^2*l011^2*s0*s1 + 15*l001^3*l10^2*l011^2*s01^2 - 18*l001^3*l10^2*l011^2*s01*s1 + 6*l001^3*l10^2*l011^2*s1^2 + 4*l001^2*l01*l10^2*l011*s0^2*s01 - 4*l001^2*l01*l10^2*l011*s0^2*s1 - 14*l001^2*l01*l10^2*l011*s0*s01^2 + 20*l001^2*l01*l10^2*l011*s0*s01*s1 - 6*l001^2*l01*l10^2*l011*s0*s1^2 + 10*l001^2*l01*l10^2*l011*s01^3 - 16*l001^2*l01*l10^2*l011*s01^2*s1 + 6*l001^2*l01*l10^2*l011*s01*s1^2 + l001*l01^2*l10^2*s0^2*s01^2 - 2*l001*l01^2*l10^2*s0^2*s01*s1 + l001*l01^2*l10^2*s0^2*s1^2 - 2*l001*l01^2*l10^2*s0*s01^3 + 4*l001*l01^2*l10^2*s0*s01^2*s1 - 2*l001*l01^2*l10^2*s0*s01*s1^2 + l001*l01^2*l10^2*s01^4 - 2*l001*l01^2*l10^2*s01^3*s1 + l001*l01^2*l10^2*s01^2*s1^2))/((s0 - s01)^5*(s01 - s1)^4) - (exp(-s1*Delta)*(3*l001^3*l10^2*l011^2*s01 - 6*l001^3*l10^2*l011^2*s1 + 3*s0*l001^3*l10^2*l011^2 + 6*l001^2*l01*l10^2*l011*s01^2 - 16*l001^2*l01*l10^2*l011*s01*s1 + 4*s0*l001^2*l01*l10^2*l011*s01 + 10*l001^2*l01*l10^2*l011*s1^2 - 4*s0*l001^2*l01*l10^2*l011*s1 + 3*l001*l01^2*l10^2*s01^3 - 10*l001*l01^2*l10^2*s01^2*s1 + s0*l001*l01^2*l10^2*s01^2 + 11*l001*l01^2*l10^2*s01*s1^2 - 2*s0*l001*l01^2*l10^2*s01*s1 - 4*l001*l01^2*l10^2*s1^3 + s0*l001*l01^2*l10^2*s1^2))/((s0 - s1)^4*(s01 - s1)^4) - (exp(-s0*Delta)*(15*l001^3*l10^2*l011^2*s0^2 - 12*l001^3*l10^2*l011^2*s0*s01 - 18*l001^3*l10^2*l011^2*s0*s1 + 3*l001^3*l10^2*l011^2*s01^2 + 6*l001^3*l10^2*l011^2*s01*s1 + 6*l001^3*l10^2*l011^2*s1^2 - 20*l001^2*l01*l10^2*l011*s0^3 + 40*l001^2*l01*l10^2*l011*s0^2*s01 + 20*l001^2*l01*l10^2*l011*s0^2*s1 - 26*l001^2*l01*l10^2*l011*s0*s01^2 - 28*l001^2*l01*l10^2*l011*s0*s01*s1 - 6*l001^2*l01*l10^2*l011*s0*s1^2 + 6*l001^2*l01*l10^2*l011*s01^3 + 8*l001^2*l01*l10^2*l011*s01^2*s1 + 6*l001^2*l01*l10^2*l011*s01*s1^2 + 6*l001*l01^2*l10^2*s0^4 - 20*l001*l01^2*l10^2*s0^3*s01 - 4*l001*l01^2*l10^2*s0^3*s1 + 25*l001*l01^2*l10^2*s0^2*s01^2 + 10*l001*l01^2*l10^2*s0^2*s01*s1 + l001*l01^2*l10^2*s0^2*s1^2 - 14*l001*l01^2*l10^2*s0*s01^3 - 8*l001*l01^2*l10^2*s0*s01^2*s1 - 2*l001*l01^2*l10^2*s0*s01*s1^2 + 3*l001*l01^2*l10^2*s01^4 + 2*l001*l01^2*l10^2*s01^3*s1 + l001*l01^2*l10^2*s01^2*s1^2))/((s0 - s01)^5*(s0 - s1)^4) - (Delta^2*exp(-s0*Delta)*(l001^3*l10^2*l011^2 - 2*l001^2*l01*l10^2*l011*s0 + 2*l001^2*l01*l10^2*l011*s01 + l001*l01^2*l10^2*s0^2 - 2*l001*l01^2*l10^2*s0*s01 + l001*l01^2*l10^2*s01^2))/(2*(s0 - s01)^3*(s0 - s1)^2) + (Delta*exp(-s01*Delta)*(2*l001^3*l10^2*l011^2*s0 - 5*l001^3*l10^2*l011^2*s01 + 3*l001^3*l10^2*l011^2*s1 - 2*l001^2*l01*l10^2*l011*s01^2 + 2*l001^2*l01*l10^2*l011*s0*s01 - 2*l001^2*l01*l10^2*l011*s0*s1 + 2*l001^2*l01*l10^2*l011*s01*s1))/((s0 - s01)^4*(s01 - s1)^3) + (Delta*exp(-s0*Delta)*(2*l001^3*l10^2*l011^2*s01 - 5*l001^3*l10^2*l011^2*s0 + 3*s1*l001^3*l10^2*l011^2 + 8*l001^2*l01*l10^2*l011*s0^2 - 12*l001^2*l01*l10^2*l011*s0*s01 - 4*s1*l001^2*l01*l10^2*l011*s0 + 4*l001^2*l01*l10^2*l011*s01^2 + 4*s1*l001^2*l01*l10^2*l011*s01 - 3*l001*l01^2*l10^2*s0^3 + 8*l001*l01^2*l10^2*s0^2*s01 + s1*l001*l01^2*l10^2*s0^2 - 7*l001*l01^2*l10^2*s0*s01^2 - 2*s1*l001*l01^2*l10^2*s0*s01 + 2*l001*l01^2*l10^2*s01^3 + s1*l001*l01^2*l10^2*s01^2))/((s0 - s01)^4*(s0 - s1)^3) + (Delta*exp(-s1*Delta)*(l001^3*l10^2*l011^2 + 2*l001^2*l01*l10^2*l011*s01 - 2*l001^2*l01*l10^2*l011*s1 + l001*l01^2*l10^2*s01^2 - 2*l001*l01^2*l10^2*s01*s1 + l001*l01^2*l10^2*s1^2))/((s0 - s1)^3*(s01 - s1)^3) + (l001^3*l10^2*l011^2*Delta^2*exp(-s01*Delta))/(2*(s0 - s01)^3*(s01 - s1)^2);
% 		Q(2,1) =  (exp(-s01*Delta)*(2*l001*l10^2*l011^2*s0 - 4*l001*l10^2*l011^2*s01 + 2*l001*l10^2*l011^2*s1 - l01*l10^2*l011*s01^2 + l01*l10^2*l011*s0*s01 - l01*l10^2*l011*s0*s1 + l01*l10^2*l011*s01*s1))/((s0 - s01)^3*(s01 - s1)^3) - (exp(-s1*Delta)*(2*l001*l10^2*l011^2*s01 - 4*l001*l10^2*l011^2*s1 + 2*l001*s0*l10^2*l011^2 + 2*l01*l10^2*l011*s01^2 - 5*l01*l10^2*l011*s01*s1 + l01*s0*l10^2*l011*s01 + 3*l01*l10^2*l011*s1^2 - l01*s0*l10^2*l011*s1))/((s0 - s1)^3*(s01 - s1)^3) - (exp(-s0*Delta)*(- 4*l001*l10^2*l011^2*s0 + 2*l001*l10^2*l011^2*s01 + 2*l001*s1*l10^2*l011^2 + 3*l01*l10^2*l011*s0^2 - 5*l01*l10^2*l011*s0*s01 - l01*s1*l10^2*l011*s0 + 2*l01*l10^2*l011*s01^2 + l01*s1*l10^2*l011*s01))/((s0 - s01)^3*(s0 - s1)^3) + (Delta*exp(-s0*Delta)*(l001*l10^2*l011^2 - l01*l10^2*l011*s0 + l01*l10^2*l011*s01))/((s0 - s01)^2*(s0 - s1)^2) + (Delta*exp(-s1*Delta)*(l001*l10^2*l011^2 + l01*l10^2*l011*s01 - l01*l10^2*l011*s1))/((s0 - s1)^2*(s01 - s1)^2) + (l001*l10^2*l011^2*Delta*exp(-s01*Delta))/((s0 - s01)^2*(s01 - s1)^2);
% 		Q(2,2) =  (exp(-s01*Delta)*(3*l001^2*l10^2*l011^2*s0^2 - 10*l001^2*l10^2*l011^2*s0*s01 + 4*l001^2*l10^2*l011^2*s0*s1 + 10*l001^2*l10^2*l011^2*s01^2 - 10*l001^2*l10^2*l011^2*s01*s1 + 3*l001^2*l10^2*l011^2*s1^2 + 2*l01*l001*l10^2*l011*s0^2*s01 - 2*l01*l001*l10^2*l011*s0^2*s1 - 6*l01*l001*l10^2*l011*s0*s01^2 + 8*l01*l001*l10^2*l011*s0*s01*s1 - 2*l01*l001*l10^2*l011*s0*s1^2 + 4*l01*l001*l10^2*l011*s01^3 - 6*l01*l001*l10^2*l011*s01^2*s1 + 2*l01*l001*l10^2*l011*s01*s1^2))/((s0 - s01)^4*(s01 - s1)^4) + (exp(-s0*Delta)*(- 5*l001^2*l10^2*l011^2*s0 + 2*l001^2*l10^2*l011^2*s01 + 3*s1*l001^2*l10^2*l011^2 + 4*l01*l001*l10^2*l011*s0^2 - 6*l01*l001*l10^2*l011*s0*s01 - 2*l01*s1*l001*l10^2*l011*s0 + 2*l01*l001*l10^2*l011*s01^2 + 2*l01*s1*l001*l10^2*l011*s01))/((s0 - s01)^4*(s0 - s1)^3) - (exp(-s1*Delta)*(2*l001^2*l10^2*l011^2*s01 - 5*l001^2*l10^2*l011^2*s1 + 3*s0*l001^2*l10^2*l011^2 + 2*l01*l001*l10^2*l011*s01^2 - 6*l01*l001*l10^2*l011*s01*s1 + 2*l01*s0*l001*l10^2*l011*s01 + 4*l01*l001*l10^2*l011*s1^2 - 2*l01*s0*l001*l10^2*l011*s1))/((s0 - s1)^3*(s01 - s1)^4) - (Delta*exp(-s0*Delta)*(l001^2*l10^2*l011^2 - l001*l01*l10^2*l011*s0 + l001*l01*l10^2*l011*s01))/((s0 - s01)^3*(s0 - s1)^2) + (Delta*exp(-s1*Delta)*(l001^2*l10^2*l011^2 + l001*l01*l10^2*l011*s01 - l001*l01*l10^2*l011*s1))/((s0 - s1)^2*(s01 - s1)^3) + (Delta*exp(-s01*Delta)*(2*l001^2*l10^2*l011^2*s0 - 4*l001^2*l10^2*l011^2*s01 + 2*l001^2*l10^2*l011^2*s1 - l001*l01*l10^2*l011*s01^2 + l001*l01*l10^2*l011*s0*s01 - l001*l01*l10^2*l011*s0*s1 + l001*l01*l10^2*l011*s01*s1))/((s0 - s01)^3*(s01 - s1)^3) + (l001^2*l10^2*l011^2*Delta^2*exp(-s01*Delta))/(2*(s0 - s01)^2*(s01 - s1)^2);
% 		Q(2,3) =  (l011*exp(-s01*Delta))/(s01 - s1)^2 - (l011*exp(-s1*Delta))/(s01 - s1)^2 + (l011*Delta*exp(-s1*Delta))/(s01 - s1);
% 		Q(3,1) =  (exp(-s1*Delta)*(3*l001^2*l10^3*l011^2*s0^2 + 6*l001^2*l10^3*l011^2*s0*s01 - 12*l001^2*l10^3*l011^2*s0*s1 + 6*l001^2*l10^3*l011^2*s01^2 - 18*l001^2*l10^3*l011^2*s01*s1 + 15*l001^2*l10^3*l011^2*s1^2 + 2*l001*l01*l10^3*l011*s0^2*s01 - 2*l001*l01*l10^3*l011*s0^2*s1 + 6*l001*l01*l10^3*l011*s0*s01^2 - 16*l001*l01*l10^3*l011*s0*s01*s1 + 10*l001*l01*l10^3*l011*s0*s1^2 + 12*l001*l01*l10^3*l011*s01^3 - 42*l001*l01*l10^3*l011*s01^2*s1 + 50*l001*l01*l10^3*l011*s01*s1^2 - 20*l001*l01*l10^3*l011*s1^3 + 6*l01^2*l10^3*s01^4 - 24*l01^2*l10^3*s01^3*s1 + 36*l01^2*l10^3*s01^2*s1^2 - 24*l01^2*l10^3*s01*s1^3 + 6*l01^2*l10^3*s1^4))/((s0 - s1)^5*(s01 - s1)^4) - (exp(-s0*Delta)*(15*l001^2*l10^3*l011^2*s0^2 - 18*l001^2*l10^3*l011^2*s0*s01 - 12*l001^2*l10^3*l011^2*s0*s1 + 6*l001^2*l10^3*l011^2*s01^2 + 6*l001^2*l10^3*l011^2*s01*s1 + 3*l001^2*l10^3*l011^2*s1^2 - 20*l001*l01*l10^3*l011*s0^3 + 50*l001*l01*l10^3*l011*s0^2*s01 + 10*l001*l01*l10^3*l011*s0^2*s1 - 42*l001*l01*l10^3*l011*s0*s01^2 - 16*l001*l01*l10^3*l011*s0*s01*s1 - 2*l001*l01*l10^3*l011*s0*s1^2 + 12*l001*l01*l10^3*l011*s01^3 + 6*l001*l01*l10^3*l011*s01^2*s1 + 2*l001*l01*l10^3*l011*s01*s1^2 + 6*l01^2*l10^3*s0^4 - 24*l01^2*l10^3*s0^3*s01 + 36*l01^2*l10^3*s0^2*s01^2 - 24*l01^2*l10^3*s0*s01^3 + 6*l01^2*l10^3*s01^4))/((s0 - s01)^4*(s0 - s1)^5) - (exp(-s01*Delta)*(3*l001^2*l10^3*l011^2*s0 - 6*l001^2*l10^3*l011^2*s01 + 3*l001^2*l10^3*l011^2*s1 - 2*l001*l01*l10^3*l011*s01^2 + 2*l001*l01*l10^3*l011*s0*s01 - 2*l001*l01*l10^3*l011*s0*s1 + 2*l001*l01*l10^3*l011*s01*s1))/((s0 - s01)^4*(s01 - s1)^4) + (Delta*exp(-s0*Delta)*(3*l001^2*l10^3*l011^2*s01 - 5*l001^2*l10^3*l011^2*s0 + 2*s1*l001^2*l10^3*l011^2 + 8*l001*l01*l10^3*l011*s0^2 - 14*l001*l01*l10^3*l011*s0*s01 - 2*s1*l001*l01*l10^3*l011*s0 + 6*l001*l01*l10^3*l011*s01^2 + 2*s1*l001*l01*l10^3*l011*s01 - 3*l01^2*l10^3*s0^3 + 9*l01^2*l10^3*s0^2*s01 - 9*l01^2*l10^3*s0*s01^2 + 3*l01^2*l10^3*s01^3))/((s0 - s01)^3*(s0 - s1)^4) - (Delta*exp(-s1*Delta)*(3*l001^2*l10^3*l011^2*s01 - 5*l001^2*l10^3*l011^2*s1 + 2*s0*l001^2*l10^3*l011^2 + 6*l001*l01*l10^3*l011*s01^2 - 14*l001*l01*l10^3*l011*s01*s1 + 2*s0*l001*l01*l10^3*l011*s01 + 8*l001*l01*l10^3*l011*s1^2 - 2*s0*l001*l01*l10^3*l011*s1 + 3*l01^2*l10^3*s01^3 - 9*l01^2*l10^3*s01^2*s1 + 9*l01^2*l10^3*s01*s1^2 - 3*l01^2*l10^3*s1^3))/((s0 - s1)^4*(s01 - s1)^3) - (Delta^2*exp(-s0*Delta)*(l001^2*l10^3*l011^2 - 2*l001*l01*l10^3*l011*s0 + 2*l001*l01*l10^3*l011*s01 + l01^2*l10^3*s0^2 - 2*l01^2*l10^3*s0*s01 + l01^2*l10^3*s01^2))/(2*(s0 - s01)^2*(s0 - s1)^3) + (Delta^2*exp(-s1*Delta)*(l001^2*l10^3*l011^2 + 2*l001*l01*l10^3*l011*s01 - 2*l001*l01*l10^3*l011*s1 + l01^2*l10^3*s01^2 - 2*l01^2*l10^3*s01*s1 + l01^2*l10^3*s1^2))/(2*(s0 - s1)^3*(s01 - s1)^2) - (l001^2*l10^3*l011^2*Delta*exp(-s01*Delta))/((s0 - s01)^3*(s01 - s1)^3);
% 		Q(3,2) =  (exp(-s0*Delta)*(21*l001^3*l10^3*l011^2*s0^2 - 21*l001^3*l10^3*l011^2*s0*s01 - 21*l001^3*l10^3*l011^2*s0*s1 + 6*l001^3*l10^3*l011^2*s01^2 + 9*l001^3*l10^3*l011^2*s01*s1 + 6*l001^3*l10^3*l011^2*s1^2 - 30*l001^2*l01*l10^3*l011*s0^3 + 66*l001^2*l01*l10^3*l011*s0^2*s01 + 24*l001^2*l01*l10^3*l011*s0^2*s1 - 48*l001^2*l01*l10^3*l011*s0*s01^2 - 36*l001^2*l01*l10^3*l011*s0*s01*s1 - 6*l001^2*l01*l10^3*l011*s0*s1^2 + 12*l001^2*l01*l10^3*l011*s01^3 + 12*l001^2*l01*l10^3*l011*s01^2*s1 + 6*l001^2*l01*l10^3*l011*s01*s1^2 + 10*l001*l01^2*l10^3*s0^4 - 35*l001*l01^2*l10^3*s0^3*s01 - 5*l001*l01^2*l10^3*s0^3*s1 + 46*l001*l01^2*l10^3*s0^2*s01^2 + 13*l001*l01^2*l10^3*s0^2*s01*s1 + l001*l01^2*l10^3*s0^2*s1^2 - 27*l001*l01^2*l10^3*s0*s01^3 - 11*l001*l01^2*l10^3*s0*s01^2*s1 - 2*l001*l01^2*l10^3*s0*s01*s1^2 + 6*l001*l01^2*l10^3*s01^4 + 3*l001*l01^2*l10^3*s01^3*s1 + l001*l01^2*l10^3*s01^2*s1^2))/((s0 - s01)^5*(s0 - s1)^5) - (exp(-s01*Delta)*(6*l001^3*l10^3*l011^2*s0^2 - 21*l001^3*l10^3*l011^2*s0*s01 + 9*l001^3*l10^3*l011^2*s0*s1 + 21*l001^3*l10^3*l011^2*s01^2 - 21*l001^3*l10^3*l011^2*s01*s1 + 6*l001^3*l10^3*l011^2*s1^2 + 6*l001^2*l01*l10^3*l011*s0^2*s01 - 6*l001^2*l01*l10^3*l011*s0^2*s1 - 18*l001^2*l01*l10^3*l011*s0*s01^2 + 24*l001^2*l01*l10^3*l011*s0*s01*s1 - 6*l001^2*l01*l10^3*l011*s0*s1^2 + 12*l001^2*l01*l10^3*l011*s01^3 - 18*l001^2*l01*l10^3*l011*s01^2*s1 + 6*l001^2*l01*l10^3*l011*s01*s1^2 + l001*l01^2*l10^3*s0^2*s01^2 - 2*l001*l01^2*l10^3*s0^2*s01*s1 + l001*l01^2*l10^3*s0^2*s1^2 - 2*l001*l01^2*l10^3*s0*s01^3 + 4*l001*l01^2*l10^3*s0*s01^2*s1 - 2*l001*l01^2*l10^3*s0*s01*s1^2 + l001*l01^2*l10^3*s01^4 - 2*l001*l01^2*l10^3*s01^3*s1 + l001*l01^2*l10^3*s01^2*s1^2))/((s0 - s01)^5*(s01 - s1)^5) + (exp(-s1*Delta)*(6*l001^3*l10^3*l011^2*s0^2 + 9*l001^3*l10^3*l011^2*s0*s01 - 21*l001^3*l10^3*l011^2*s0*s1 + 6*l001^3*l10^3*l011^2*s01^2 - 21*l001^3*l10^3*l011^2*s01*s1 + 21*l001^3*l10^3*l011^2*s1^2 + 6*l001^2*l01*l10^3*l011*s0^2*s01 - 6*l001^2*l01*l10^3*l011*s0^2*s1 + 12*l001^2*l01*l10^3*l011*s0*s01^2 - 36*l001^2*l01*l10^3*l011*s0*s01*s1 + 24*l001^2*l01*l10^3*l011*s0*s1^2 + 12*l001^2*l01*l10^3*l011*s01^3 - 48*l001^2*l01*l10^3*l011*s01^2*s1 + 66*l001^2*l01*l10^3*l011*s01*s1^2 - 30*l001^2*l01*l10^3*l011*s1^3 + l001*l01^2*l10^3*s0^2*s01^2 - 2*l001*l01^2*l10^3*s0^2*s01*s1 + l001*l01^2*l10^3*s0^2*s1^2 + 3*l001*l01^2*l10^3*s0*s01^3 - 11*l001*l01^2*l10^3*s0*s01^2*s1 + 13*l001*l01^2*l10^3*s0*s01*s1^2 - 5*l001*l01^2*l10^3*s0*s1^3 + 6*l001*l01^2*l10^3*s01^4 - 27*l001*l01^2*l10^3*s01^3*s1 + 46*l001*l01^2*l10^3*s01^2*s1^2 - 35*l001*l01^2*l10^3*s01*s1^3 + 10*l001*l01^2*l10^3*s1^4))/((s0 - s1)^5*(s01 - s1)^5) + (Delta^2*exp(-s0*Delta)*(l001^3*l10^3*l011^2 - 2*l001^2*l01*l10^3*l011*s0 + 2*l001^2*l01*l10^3*l011*s01 + l001*l01^2*l10^3*s0^2 - 2*l001*l01^2*l10^3*s0*s01 + l001*l01^2*l10^3*s01^2))/(2*(s0 - s01)^3*(s0 - s1)^3) + (Delta^2*exp(-s1*Delta)*(l001^3*l10^3*l011^2 + 2*l001^2*l01*l10^3*l011*s01 - 2*l001^2*l01*l10^3*l011*s1 + l001*l01^2*l10^3*s01^2 - 2*l001*l01^2*l10^3*s01*s1 + l001*l01^2*l10^3*s1^2))/(2*(s0 - s1)^3*(s01 - s1)^3) - (Delta*exp(-s01*Delta)*(3*l001^3*l10^3*l011^2*s0 - 6*l001^3*l10^3*l011^2*s01 + 3*l001^3*l10^3*l011^2*s1 - 2*l001^2*l01*l10^3*l011*s01^2 + 2*l001^2*l01*l10^3*l011*s0*s01 - 2*l001^2*l01*l10^3*l011*s0*s1 + 2*l001^2*l01*l10^3*l011*s01*s1))/((s0 - s01)^4*(s01 - s1)^4) - (Delta*exp(-s0*Delta)*(3*l001^3*l10^3*l011^2*s01 - 6*l001^3*l10^3*l011^2*s0 + 3*s1*l001^3*l10^3*l011^2 + 10*l001^2*l01*l10^3*l011*s0^2 - 16*l001^2*l01*l10^3*l011*s0*s01 - 4*s1*l001^2*l01*l10^3*l011*s0 + 6*l001^2*l01*l10^3*l011*s01^2 + 4*s1*l001^2*l01*l10^3*l011*s01 - 4*l001*l01^2*l10^3*s0^3 + 11*l001*l01^2*l10^3*s0^2*s01 + s1*l001*l01^2*l10^3*s0^2 - 10*l001*l01^2*l10^3*s0*s01^2 - 2*s1*l001*l01^2*l10^3*s0*s01 + 3*l001*l01^2*l10^3*s01^3 + s1*l001*l01^2*l10^3*s01^2))/((s0 - s01)^4*(s0 - s1)^4) - (Delta*exp(-s1*Delta)*(3*l001^3*l10^3*l011^2*s01 - 6*l001^3*l10^3*l011^2*s1 + 3*s0*l001^3*l10^3*l011^2 + 6*l001^2*l01*l10^3*l011*s01^2 - 16*l001^2*l01*l10^3*l011*s01*s1 + 4*s0*l001^2*l01*l10^3*l011*s01 + 10*l001^2*l01*l10^3*l011*s1^2 - 4*s0*l001^2*l01*l10^3*l011*s1 + 3*l001*l01^2*l10^3*s01^3 - 10*l001*l01^2*l10^3*s01^2*s1 + s0*l001*l01^2*l10^3*s01^2 + 11*l001*l01^2*l10^3*s01*s1^2 - 2*s0*l001*l01^2*l10^3*s01*s1 - 4*l001*l01^2*l10^3*s1^3 + s0*l001*l01^2*l10^3*s1^2))/((s0 - s1)^4*(s01 - s1)^4) - (l001^3*l10^3*l011^2*Delta^2*exp(-s01*Delta))/(2*(s0 - s01)^3*(s01 - s1)^3);
% 		Q(3,3) =  (l01*l10*exp(-s1*Delta))/(s0 - s1)^3 - (l01*l10*exp(-s0*Delta))/(s0 - s1)^3 - (l01*l10*Delta*exp(-s1*Delta))/(s0 - s1)^2 + (l01*l10*Delta^2*exp(-s1*Delta))/(2*(s0 - s1));
% 		%When X(\Delta)=1, need end-state matrix of inverse transforms
			%Going from X(0) = 0 in 2 jumps: either by 0-1-0-1 or by 0-0_1-1
			endstate(1,1) = (2*l01^2*l10*exp(-Delta*s0))/(s0 - s1)^3 - (2*l01^2*l10*exp(-Delta*s1))/(s0 - s1)^3 + (Delta*l01^2*l10*exp(-Delta*s0))/(s0 - s1)^2 + (Delta*l01^2*l10*exp(-Delta*s1))/(s0 - s1)^2; %0-1-0-1
			endstate(1,2) = (l001*l011*exp(-Delta*s0))/((s0 - s01)*(s0 - s1)) - (l001*l011*exp(-Delta*s01))/((s0 - s01)*(s01 - s1)) + (l001*l011*exp(-Delta*s1))/((s0 - s1)*(s01 - s1)); %0-0_1-1
			%Going from X(0) = 0_1 in 1 jump: by 0_1-1-0-1
			endstate(2,2) = (l01*l10*l011*exp(-Delta*s01))/((s0 - s01)*(s01 - s1)^2) - (l01*l10*l011*exp(-Delta*s0))/((s0 - s01)*(s0 - s1)^2) - (exp(-Delta*s1)*(l01*l10*l011*s0 + l01*l10*l011*s01 - 2*l01*l10*l011*s1))/((s0 - s1)^2*(s01 - s1)^2) + (Delta*l01*l10*l011*exp(-Delta*s1))/((s0 - s1)*(s01 - s1)); %0_1 - 1 - 0 - 1	
			%Going from X(0) = 1 in 2 jumps: either 1-0-1-0-1 or by 1-0-0_1-1
			endstate(3,1) = l10^2*l01^2*((3*exp(-s1*Delta))/(s0 - s1)^4 - (3*exp(-s0*Delta))/(s0 - s1)^4 - (Delta*exp(-s0*Delta))/(s0 - s1)^3 - (2*Delta*exp(-s1*Delta))/(s0 - s1)^3 + (Delta^2*exp(-s1*Delta))/(2*(s0 - s1)^2));
            endstate(3,2) = (l001*l10*l011*exp(-Delta*s01))/((s0 - s01)*(s01 - s1)^2) - (l001*l10*l011*exp(-Delta*s0))/((s0 - s01)*(s0 - s1)^2) - (exp(-Delta*s1)*(l001*l10*l011*s0 + l001*l10*l011*s01 - 2*l001*l10*l011*s1))/((s0 - s1)^2*(s01 - s1)^2) + (Delta*l001*l10*l011*exp(-Delta*s1))/((s0 - s1)*(s01 - s1)); %1-0-0_1-1
	elseif no_sigmas_equal == 1 
		if sigmas_equal(1) %s0=s01
			%When X(\Delta)=1, need end-state matrix of inverse transforms

			%Going from X(0) = 0 in 2 jumps: either by 0-1-0-1 or by 0-0_1-1
			endstate(1,1) = (2*l01^2*l10*exp(-Delta*s0))/(s0 - s1)^3 - (2*l01^2*l10*exp(-Delta*s1))/(s0 - s1)^3 + (Delta*l01^2*l10*exp(-Delta*s0))/(s0 - s1)^2 + (Delta*l01^2*l10*exp(-Delta*s1))/(s0 - s1)^2; %0-1-0-1
			endstate(1,2) = (l001*l011*exp(-Delta*s1))/(s0 - s1)^2 - (l001*l011*exp(-Delta*s0))/(s0 - s1)^2 - (Delta*l001*l011*exp(-Delta*s0))/(s0 - s1);

			%Going from X(0) = 0_1 in 1 jump: by 0_1-1-0-1
			endstate(2,2) = (2*l01*l10*l011*exp(-Delta*s0))/(s0 - s1)^3 - (2*l01*l10*l011*exp(-Delta*s1))/(s0 - s1)^3 + (Delta*l01*l10*l011*exp(-Delta*s0))/(s0 - s1)^2 + (Delta*l01*l10*l011*exp(-Delta*s1))/(s0 - s1)^2;
			
			%Going from X(0) = 1 in 2 jumps: either 1-0-1-0-1 or by 1-0-0_1-1
			endstate(3,1) = (3*l01^2*l10^2*exp(-Delta*s1))/(s0 - s1)^4 - (3*l01^2*l10^2*exp(-Delta*s0))/(s0 - s1)^4 + (Delta^2*l01^2*l10^2*exp(-Delta*s1))/(2*(s0 - s1)^2) - (Delta*l01^2*l10^2*exp(-Delta*s0))/(s0 - s1)^3 - (2*Delta*l01^2*l10^2*exp(-Delta*s1))/(s0 - s1)^3; %1-0-1-0-1
			endstate(3,2) = (2*l001*l10*l011*exp(-Delta*s0))/(s0 - s1)^3 - (2*l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^3 + (Delta*l001*l10*l011*exp(-Delta*s0))/(s0 - s1)^2 + (Delta*l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^2;	
		elseif sigmas_equal(2) %s0=s1 
			%When X(\Delta)=1, need end-state matrix of inverse transforms

			%Going from X(0) = 0 in 2 jumps: either by 0-1-0-1 or by 0-0_1-1
			endstate(1,1) = (Delta^3*l01^2*l10*exp(-Delta*s1))/6;
			endstate(1,2) = (l001*l011*exp(-Delta*s01))/(s01 - s1)^2 - (l001*l011*exp(-Delta*s1))/(s01 - s1)^2 + (Delta*l001*l011*exp(-Delta*s1))/(s01 - s1);

			%Going from X(0) = 0_1 in 1 jump: by 0_1-1-0-1
			endstate(2,2) = (l01*l10*l011*exp(-Delta*s1))/(s01 - s1)^3 - (l01*l10*l011*exp(-Delta*s01))/(s01 - s1)^3 - (Delta*l01*l10*l011*exp(-Delta*s1))/(s01 - s1)^2 + (Delta^2*l01*l10*l011*exp(-Delta*s1))/(2*(s01 - s1));
			
			%Going from X(0) = 1 in 2 jumps: either 1-0-1-0-1 or by 1-0-0_1-1
			endstate(3,1) = (Delta^4*l01^2*l10^2*exp(-Delta*s1))/24;
			endstate(3,2) = (l001*l10*l011*exp(-Delta*s1))/(s01 - s1)^3 - (l001*l10*l011*exp(-Delta*s01))/(s01 - s1)^3 - (Delta*l001*l10*l011*exp(-Delta*s1))/(s01 - s1)^2 + (Delta^2*l001*l10*l011*exp(-Delta*s1))/(2*(s01 - s1));	
		elseif sigmas_equal(3) %s01=s1
			%When X(\Delta)=1, need end-state matrix of inverse transforms

			%Going from X(0) = 0 in 2 jumps: either by 0-1-0-1 or by 0-0_1-1
			endstate(1,1) = (2*l01^2*l10*exp(-Delta*s0))/(s0 - s1)^3 - (2*l01^2*l10*exp(-Delta*s1))/(s0 - s1)^3 + (Delta*l01^2*l10*exp(-Delta*s0))/(s0 - s1)^2 + (Delta*l01^2*l10*exp(-Delta*s1))/(s0 - s1)^2; %0-1-0-1
			endstate(1,2) = (l001*l011*exp(-Delta*s0))/(s0 - s1)^2 - (l001*l011*exp(-Delta*s1))/(s0 - s1)^2 + (Delta*l001*l011*exp(-Delta*s1))/(s0 - s1);

			%Going from X(0) = 0_1 in 1 jumps: by 0_1-1-0-1
			endstate(2,2) = (l01*l10*l011*exp(-Delta*s1))/(s0 - s1)^3 - (l01*l10*l011*exp(-Delta*s0))/(s0 - s1)^3 - (Delta*l01*l10*l011*exp(-Delta*s1))/(s0 - s1)^2 + (Delta^2*l01*l10*l011*exp(-Delta*s1))/(2*(s0 - s1));
			
			%Going from X(0) = 1 in 2 jumps: either 1-0-1-0-1 or by 1-0-0_1-1
			endstate(3,1) = (3*l01^2*l10^2*exp(-Delta*s1))/(s0 - s1)^4 - (3*l01^2*l10^2*exp(-Delta*s0))/(s0 - s1)^4 + (Delta^2*l01^2*l10^2*exp(-Delta*s1))/(2*(s0 - s1)^2) - (Delta*l01^2*l10^2*exp(-Delta*s0))/(s0 - s1)^3 - (2*Delta*l01^2*l10^2*exp(-Delta*s1))/(s0 - s1)^3; %1-0-1-0-1
			endstate(3,2) = (l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^3 - (l001*l10*l011*exp(-Delta*s0))/(s0 - s1)^3 - (Delta*l001*l10*l011*exp(-Delta*s1))/(s0 - s1)^2 + (Delta^2*l001*l10*l011*exp(-Delta*s1))/(2*(s0 - s1));	
		end 
	elseif no_sigmas_equal == 3
			%When X(\Delta)=1, need end-state matrix of inverse transforms
			%Going from X(0) = 0 in 2 jumps: either by 0-1-0-1 or by 0-0_1-1
			endstate(1,1) = (Delta^3*l01^2*l10*exp(-Delta*s1))/6;
			endstate(1,2) = (Delta^2*l001*l011*exp(-Delta*s1))/2;
			%Going from X(0) = 0_1 in 1 jump: by 0_1-1-0-1
			endstate(2,2) = (Delta^3*l01*l10*l011*exp(-Delta*s1))/6;		
			%Going from X(0) = 1 in 2 jumps: either 1-0-1-0-1 or by 1-0-0_1-1
			endstate(3,1) = (Delta^4*l01^2*l10^2*exp(-Delta*s1))/24;
			endstate(3,2) = (Delta^3*l001*l10*l011*exp(-Delta*s1))/6;
	end 
end 

end 
